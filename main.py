import time
import player_functions
import room_functions
import statistics
import os
import signal
from GameOverException import GameOverException

def get_difficulty_info():
    """Funci√≥n que obtiene la informaci√≥n de tiempo, vidas y pistas para cada nivel de dificultad del archivo difficulty.txt

    Returns:
        list: difficulty_info es una lista de tres listas: de cantidad de vidas, pistas y tiempo, respectivamente. Para cada lista, el primer elemento corresponde al modo F√°cil, el segundo al Medio y el tercero al Dif√≠cil.
    
    """
    while True:
        try:

            difficulty_txt = open("difficulty.txt")
            difficulty_info = difficulty_txt.readlines()
            difficulty_txt.close()
            del difficulty_txt
            for i, info in enumerate(difficulty_info):
                #la siguiente operaci√≥n permite que se reemplace cada elemento de la lista difficulty_info con una lista (antes removiendo el '\n' a la derecha de cada elemento original (info), correspondiente al salto de l√≠nea que tienen algunas de las l√≠neas del archivo difficulty.txt) cuyos elementos son delimitados en info por ","
                difficulty_info[i] = info.rstrip("\n").split(",")
                for j, number in enumerate(difficulty_info[i]):
                    if i == 0 and number == '0': #esto valida que no se pueda colocar las vidas en 0 (ya que la primera lista, es decir la lista de √≠ndice i = 0, corresponde a las vidas) haciendo que el m√≠nimo de vidas que se pueden tener es 1
                        difficulty_info[i][j] = 1
                    else:    
                        #la siguiente operaci√≥n permite 'castear' todos los n√∫meros de str a int
                        difficulty_info[i][j] = int(number)
            return difficulty_info
        
        except FileNotFoundError: #si no existe el file, se crea y se escribe en √©l los valores 'default'. luego, como se est√° en un loop, se vuelve a intentar la operaci√≥n de lectura. 
            difficulty_txt = open("difficulty.txt", 'w')
            difficulty_txt.write('5,3,1\n5,3,2\n30,20,10')
            difficulty_txt.close()
            del difficulty_txt

def new_game(players):
    """Funci√≥n que permite iniciar una nueva partida: se llaman a las funciones apropiadas para registrar un nuevo jugador con su avatar (register_player) o para permitir que el jugador ingrese a su cuenta ya existente y escoger su avatar (sign_in).
    Luego, permite al jugador escoger la dificultad de la partida. Finalmente, se inicia el juego con la primera narrativa.
    """

    print("\n", "NUEVA PARTIDA".center(120, "~"))

    if players: #chequea si hay alg√∫n jugador registrado
        if input("\n¬øYa tienes una cuenta? [S] = s√≠, cualquier otro caracter = no, deseo registrarme\n>").lower() == 's':
           player = player_functions.sign_in(players)
        else:
            player = player_functions.register_player(players)
    else: #si no hay ning√∫n jugador registrado, necesariamente el usuario deber√° registrarse para jugar
        player = player_functions.register_player(players)

    print("\n","DIFICULTAD DE PARTIDA".center(120, "-"))
    difficulty_info = get_difficulty_info()
    #TODO recuerda agregar tiempo
    print(f"""
        F√ÅCIL  üòÖ: {difficulty_info[0][0]} vidasüß° y {difficulty_info[1][0]} pistasüîç, y un tiempo de {difficulty_info[2][0]} minutos‚è≤Ô∏è
        MEDIO  üòê: {difficulty_info[0][1]} vidasüß° y {difficulty_info[1][1]} pistasüîç, y un tiempo de {difficulty_info[2][1]} minutos‚è≤Ô∏è
        DIF√çCILüòñ: {difficulty_info[0][2]} vida üß° y {difficulty_info[1][2]} pistasüîç, y un tiempo de {difficulty_info[2][2]} minutos‚è≤Ô∏è
    """)
    while True:
        game_difficulty = input("Ingresa el nivel de dificultad: [F], [M], [D]\n>").lower()
        if game_difficulty == 'f':
            player.set_lives_and_clues(difficulty_info[0][0], difficulty_info[1][0])
            time_difficulty = difficulty_info[2][0]
            break
        elif game_difficulty == 'm':
            player.set_lives_and_clues(difficulty_info[0][1], difficulty_info[1][1])
            time_difficulty = difficulty_info[2][1]
            break
        elif game_difficulty == 'd':
            player.set_lives_and_clues(difficulty_info[0][2], difficulty_info[1][2])
            time_difficulty = difficulty_info[2][2]
            break
        else:
            print("ERROR: opci√≥n inv√°lida.\n")
    player.set_game_difficulty(game_difficulty)
    print("Dificultad escogida con √©xito. ‚úîÔ∏è")
    input("\nIngresa cualquier cosa cuando est√©s listo para comenzar el juego:\n‚ñ∂Ô∏è ")

    first_narrative(time_difficulty, player)

def first_narrative(time_difficulty, player):
    """Funci√≥n que muestra la primera narrativa del juego.

    Args:
        time_difficulty (int): n√∫mero de minutos m√°ximo para el juego seg√∫n la dificultad.
        player (Player): instancia de la clase Player asociado al jugador que juega.
    """
    time.sleep(0.25)
    os.system('clear') #'limpia' todo lo que hay en la terminal.
    input("Presiona 'enter' para continuar\n‚ñ∂Ô∏è ")
    print("\nHoy 5 de marzo de 2021, la Universidad sigue en cuarentena (esto no es novedad)...")
    input("\n‚ñ∂Ô∏è ")
    print("...lo que s√≠ es novedad es que se robaron un Disco Duro de la Universidad, del cuarto de redes...")
    input("\n‚ñ∂Ô∏è ")
    print("...que tiene TODA la informaci√≥n de SAP de estudiantes, pagos y asignaturas.")
    input("\n‚ñ∂Ô∏è ")
    print("\n¬°Necesitamos que nos ayudes a recuperar el disco!")
    input("\n‚ñ∂Ô∏è ")
    print(f"\nPara eso tienes {time_difficulty} minutos, antes de que el servidor se caiga y no se pueda hacer m√°s nada.")
    input("\n‚ñ∂Ô∏è ")
    print(f"{player.get_avatar()}... ¬øAceptas el reto?")
    print("\n\t[S] = s√≠", "\t|\t", "[N] = no")
    user_input = input("\n>").lower()
    if user_input == 'n':
        print("¬øSeguro que no quieres?")
        input("\n‚ñ∂Ô∏è ")
        print("Tipo, ¬øen serio?")
        input("\n‚ñ∂Ô∏è ")
        print("T√∫ fuiste el que entr√≥ al juego.")
        input("\n‚ñ∂Ô∏è ")
        print("Deber√≠as reconsiderar.")
        input("\n‚ñ∂Ô∏è ")
        print("De hecho ni siquiera importa lo que quieras.")
        input("\n‚ñ∂Ô∏è ")
        print("Est√°s avisado.")
        input("\n‚ñ∂Ô∏è ")
        print(f"{player.get_avatar()}... ¬øAceptas el reto?\n\n\t[S] = s√≠", "\t|\t", "cualquier otra cosa = no, pero realmente no tengo otra opci√≥n")
        input("\n>")
    elif user_input != 'n' and user_input != 's':
        print("¬øEs en serio?")
        input("\n‚ñ∂Ô∏è ")
        print("¬øYa vamos a empezar as√≠?")
        input("\n‚ñ∂Ô∏è ")
        print("Te doy DOS OPCIONES.")
        input("\n‚ñ∂Ô∏è ")
        print("DOS.")
        input("\n‚ñ∂Ô∏è ")
        print("NI M√ÅS, NI MENOS.")
        input("\n‚ñ∂Ô∏è ")
        print("¬øY t√∫...me haces esto?")
        input("\n‚ñ∂Ô∏è ")
        print("Espero que est√©s feliz contigo mismo.")
        input("\n‚ñ∂Ô∏è ")
        print("De todas formas no me importa tu opini√≥n.")
        input("\n‚ñ∂Ô∏è ")
        print(f"{player.get_avatar()}... ¬øAceptas el reto?\n\n\t[Literalmente cualquier cosa] = s√≠", "\t|\t", "Eso es todo, no hay otra opci√≥n")
        input("\n>")
    game(time_difficulty, player)

def game(time_difficulty, player):
    """Funci√≥n del juego: en √©sta se muestra la narrativa 2, se empieza el tiempo y a continuaci√≥n 
    el juego (dentro de un try, es un loop hasta que se gane en el que se llama a la funci√≥n go_to_room que es la funci√≥n en la cual el jugador va a cuartos e interact√∫a con objetos, etc.).
    Si se acabara el tiempo (como se hace un raise TimeoutError al pasar esto), se entra al c√≥digo indentado luego del except TimeoutError. Lo mismo si se acaban las vidas, pero con el error GameOverException.
    Por √∫ltimo, se guarda la informaci√≥n de la partida (tiempo jugado, si se gan√≥ o no) y se muestra la narrativa final (depende de si perdi√≥ o gan√≥ y, en este √∫ltimo caso, de qu√© avatar us√≥).

    Args:
        time_difficulty (int): n√∫mero de minutos m√°ximo para el juego seg√∫n la dificultad.
        player (Player): instancia de la clase Player asociado al jugador que juega.
    """
    winner = False
    laboratory, library, plaza, corridor, server_room = room_functions.define_rooms()
    
    print(f"\nBienvenido {player.get_avatar()}, gracias por tu disposici√≥n a ayudarnos a resolver este inconveniente.")
    input("\n‚ñ∂Ô∏è ")
    print("Te encuentras actualmente ubicado en la biblioteca, revisa el men√∫ de opciones para ver qu√© acciones puedes realizar.\nRecuerda que el tiempo corre m√°s r√°pido que un trimestre en este reto.")
    input("\nPresiona 'enter' para comenzar el tiempo.\n‚ñ∂Ô∏è ")

    start_time = time.time() #time.time() devuelve el tiempo actual, representado en segundos despu√©s de Epoch
    max_time = start_time + time_difficulty*60 #max_time es el tiempo m√°ximo en el que terminar√≠a el juego (es decir, el momento final de juego si se juega hasta terminarse el tiempo). se multiplica time_difficulty por 60 ya que time_difficulty est√° expresado en minutos y se necesitan los segundos.
    player.set_max_time(max_time)
    signal.signal(signal.SIGALRM, time_over)   #cuando se obtiene la se√±al de la alarma luego del tiempo de juego, se llama a la funci√≥n time_over (que es el handler) la cual hace un raise TimeoutError      
    signal.alarm(60*time_difficulty) #env√≠a una se√±al cuando ha pasado el tiempo de juego (como time_difficulty est√° expresado en minutos y signal.alarm() toma segundos como par√°metro, se multiplica por 60 los minutos del tiempo de juego.)

    room = library #se empieza en la biblioteca, por tanto el valor inicial de room, as√≠ como el primer cuarto que visita el jugador en cada juego, es la biblioteca (library)
    player.visit_room(room)
    try:
        while not winner:
            room = room_functions.go_to_room(room, player)
            if room == server_room and server_room.get_objects()[0].get_is_cleared(): #si se est√° en el cuarto de servidores y el primer objeto (es decir la puerta) ya est√° en estado cleared (es decir, el m√©todo get_is_cleared retorna True ya que el minijuego asociado a √©l ya fue ganado) significa que se gan√≥ el juego. al actualizar winner a True, se sale del loop y se ejecuta el c√≥digo despu√©s del try except.
                winner = True
                signal.alarm(0) #al hacer esto se detiene la se√±al de alarma, ya que ya no es necesario porque se gan√≥ el juego.

    except TimeoutError: #como el handler de la se√±al de alarma hace un raise TimeoutError una vez termine el tiempo dado, se sale del juego una vez se tiene este error y se entra en el c√≥digo indentado despu√©s de este except
        os.system('clear')
        print("\n\n", "‚ùå‚è∞¬°SE ACAB√ì EL TIEMPO!‚è∞‚ùå".center(120, " "), "\n\n")

    except GameOverException: #como el m√©todo lose_lives de la clase Player hace un raise GameOverException cuando se tiene cero o menos vidas, al perder todas las vidas se ejecuta el c√≥digo indentado despu√©s de este except
        os.system('clear')
        print("\n\n", "‚ùå‚ò†Ô∏èPERDISTE TODAS TUS VIDAS‚ò†Ô∏è‚ùå".center(120, " "), "\n\n")
        signal.alarm(0) #detiene la se√±al de alarma ya que ya se perdi√≥ el juego y no es necesaria

    time_played = round(time.time() - start_time, 2) #el tiempo jugado es la variaci√≥n entre el tiempo actual (al momento de acabar el juego) y el tiempo de comienzo
    player.add_game_info(time_played, winner)

    if not winner:
        print('''
                        
                           ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë
                           ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
                           ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
                           ‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
                           ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë
                           ‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ÄÉ‚ÄÉ‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù
            ''')
        time.sleep(2)
        input("\n\nPresiona 'enter' para seguir.\n‚ñ∂Ô∏è ")
        print(f"\nDerrotado, unos vigilantes te consiguen en {player.get_current_room().get_name()}. \nTe preguntan qu√© est√°s haciendo en la universidad, pero, por estar llorando, no logras contestar.\nTu dificultad para responder hace que los vigilantes sospechen de ti. \n'¬øSer√° que fue {player.get_avatar()} quien rob√≥ el Disco Duro?' se preguntan.")
        input("\n‚ñ∂Ô∏è ")
        print(f"\nPor supuesto, no quer√≠an saltar de cabeza a conclusiones, as√≠ que hicieron una peque√±a investigaci√≥n. \nDigo, ¬øqui√©n les creer√≠a si dijeran que {player.get_avatar()} rob√≥ un Disco Duro?")
        input("\n‚ñ∂Ô∏è ")
        print("\n¬°No consiguieron nada en contra tuyo!üôåü•≥")
        input("\n‚ñ∂Ô∏è ")
        print("\n...Sin embargo, las noticias corren r√°pido. Muy r√°pido. Sobre todo si son falsas:")
        input("\n‚ñ∂Ô∏è ")
        print("\nUn grupo de personas descontentas con lo que suponen que hiciste se desahogan en su red social preferida.")
        input("\n‚ñ∂Ô∏è ")
        print("ùêÇùêÄùêçùêÇùêÑùêãùêãùêÑùêÉ ùêÑùêçùêÉùêàùêçùêÜ: Te cancelaron en Twitter ‚úåÔ∏èüòû")
        input("\nPresiona 'enter' para ir al men√∫ principal\n‚ñ∂Ô∏è ")
        os.system('clear')

    else:
        os.system('clear')
        print('''
                                        
                                ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
                                ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
                                ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë
                                ‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë
                                ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
                                ‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
            ''')
        time.sleep(2)
        input("Presiona 'enter' para continuar\n‚ñ∂Ô∏è ")
        print("¬°Felicidades! Has logrado evitar una cat√°strofe en la Unimet.")
        input("\n‚ñ∂Ô∏è ")
        if player.get_avatar() == 'Benjam√≠n Scharifker':
            print("\nComo recompensa por el gran servicio que le prestaste a la Unimet,\nel resto de las autoridades de la universidad decidi√≥ por fin hacerte una estatua:")
            input("\n‚ñ∂Ô∏è ")
            print("\nPor generaciones se recordar√° al rector Benjam√≠n Scharifker \ncomo el rector que salv√≥ a la Universidad Metropolitana de un... ¬øataque inform√°tico?\nAlgo as√≠, nadie sabe exactamente qu√© pas√≥.")
            input("\n‚ñ∂Ô∏è ")
            print("\nùêíùêìùêÄùêìùêîùêÑ ùêÑùêçùêÉùêàùêçùêÜ: ahora la Unimet tiene una estatua m√°s. üë§ \n¬°Pero esta vez es de ti! Disfr√∫tala, supongo.")
        elif player.get_avatar() == 'Eugenio Mendoza' or player.get_avatar() == 'Gandhi':
            print("\nPersonas alrededor de toda Venezuela quer√≠an saber qui√©n fue el valiente h√©roe que salv√≥ a la Unimet.")
            input("\n‚ñ∂Ô∏è ")
            print("\nSin embargo, t√∫ sabes que tu secreto no puede ser revelado...")
            input("\n‚ñ∂Ô∏è ")
            print(f"\nQui√©n sabe qu√© pasar√≠a si las personas supieran que la estatua de {player.get_avatar()} en la Unimet puede cobrar vida.\nS√≠, como en Toy Story, pero una estatua del tama√±o de una persona. Espeluznante, ¬øcierto?")
            input("\n‚ñ∂Ô∏è ")
            print("\nùêîùêçùêäùêçùêéùêñùêç ùêáùêÑùêëùêé ùêÑùêçùêÉùêàùêçùêÜ: se crear√°n leyendas alrededor del acontecimiento del d√≠a de hoy.\nIncluso habr√° gente que dir√° que fue una estatua. Qu√© loco, ¬øno?")
        elif player.get_avatar() == 'Pelusa':
            print("\nAl notar que el momento del desastre nunca lleg√≥, distintas personas se acercaron a las\ninstalaciones de la universidad pregunt√°ndose qu√© hab√≠a pasado.")
            input("\n‚ñ∂Ô∏è ")
            print("\nAl notarte en el cuarto de servidores, rieron con ternura.")
            input("\n‚ñ∂Ô∏è ")
            print("\n'¬°Qu√© linda gatita! ¬øSer√° que quien recuper√≥ el Disco Duro la dej√≥ aqu√≠ por accidente?'")
            input("\n‚ñ∂Ô∏è ")
            print("\nTu sangre hierve por la rabia. ¬øPor qu√© no pueden ver que fuiste t√∫?")
            input("\n‚ñ∂Ô∏è ")
            print("\n...")
            input("\n‚ñ∂Ô∏è ")
            print("\nCierto.")
            input("\n‚ñ∂Ô∏è ")
            print("\nEres un gato.")
            input("\n‚ñ∂Ô∏è ")
            print("\nùêäùêàùêìùêìùêò ùêÑùêçùêÉùêàùêçùêÜ: nadie cree que fuiste t√∫ quien salv√≥ a la Unimet, pero al menos eres un gato.\nTe conformas con las caricias que te dan las personas curiosas sobre el incidente.")
        elif player.get_avatar() == 'Estudiante Estresad@':
            print("\nPara recompensar el gran servicio que le prestaste a la Universidad este d√≠a,\nlas autoridades de la Unimet deciden que te mereces la mejor de las recompensas.")
            input("\n‚ñ∂Ô∏è ")
            print("\nTe dan a escoger entre dos opciones: \n(1) una beca 100% o (2) la ayuda de los mejores tutores en todas tus materias.")
            input("\n‚ñ∂Ô∏è ")
            option = input("\nT√∫, por supuesto, escoges ... >")
            if option == '1':
                print("\n¬°La beca! ¬°Claro! Con lo mucho que te cuesta pagar los trimestres a veces, una beca 100% ser√≠a una ayuda INMENSA.")
                input("\n‚ñ∂Ô∏è ")
                print("\nDesafortunadamente, notas muy pronto lo dif√≠cil que es mantener dicha beca.")
                input("\n‚ñ∂Ô∏è ")
                print("\nùêíùêìùêëùêÑùêíùêíùêÑùêÉ ùêÑùêçùêÉùêàùêçùêÜ: ya no quieres jugar m√°s a la Universidad. üòû")
            elif option == '2':
                print("\n¬°Los tutores! Te gusta poder ver las materias a tu propio paso sin la presi√≥n de mantener una beca \ny la ayuda de tutores suena maravillosa.")
                input("\n‚ñ∂Ô∏è ")
                print("\nTe encanta poder obtener ayuda en cualquier momento que la necesites a trav√©s de videollamada, \npero muy por dentro sabes que prefieres la interacci√≥n en vivo.")
                input("\n‚ñ∂Ô∏è ")
                print("\nùêÇùêéùêïùêàùêÉ ùêÑùêçùêÉùêàùêçùêÜ: visitaste a uno de tus tutores y no siguieron las precauciones necesarias.\nTe dio Covid-19 (pero tranquilo, se te quit√≥). ¬°USA UNA M√ÅSCARILLA!üò∑")
            elif not option: #si le dio a enter sin responder nada
                print("\n...Nada. No necesitas nada para sentirte recompensado. \nEl mero hecho de haber ayudado a tu Universidad te hace sentir inmensamente feliz y satisfecho.")
                input("\n‚ñ∂Ô∏è ")
                print("\nùêçùêéùêÅùêãùêÑ ùêÑùêçùêÉùêàùêçùêÜ: tu noble respuesta -o falta de respuesta- conmueve a las autoridades de la Universidad.\nVives el resto de tu vida sin pensar en ese d√≠a en el que salvaste a la Unimet.")
            else:
                print("\nLas autoridades te miran confundidas mientras miras al horizonte, sin ning√∫n tipo de expresi√≥n en tu rostro.")
                input("\n‚ñ∂Ô∏è ")
                print(f"\n'{option}' susurras para ti mismo.")
                input("\n‚ñ∂Ô∏è ")
                print("\nComienzas a re√≠r, ya que te gusta escoger opciones distintas a las que te presentan.")
                input("\n‚ñ∂Ô∏è ")
                print("\nDesafortunadamente las autoridades de la Universidad no lo encuentran tan gracioso.\nTodo lo contrario, de hecho: lo consideran una falta de respeto inmensa,\nque merece el peor de los castigos.")
                input("\n‚ñ∂Ô∏è ")
                print("\nùêíùêÑùêÇùêëùêÑùêì ùêÑùêçùêÉùêàùêçùêÜ: te botaron de la Unimet.")
        input("\nPresiona 'enter' para ir al men√∫ principal\n‚ñ∂Ô∏è ")
        os.system('clear')

def time_over(signal, frame): 
    #Funci√≥n 'handler' de la se√±al de alarma una vez se acaba el tiempo del juego. Hace un raise TimeoutError.
    raise TimeoutError
    
def instructions():
    """Funci√≥n que muestra las instrucciones generales del juego y luego permite que el usuario escoja si quiere ver las instrucciones de alg√∫n minijuego espec√≠fico.
    """

    print("INSTRUCCIONES".center(120, "-"))
    print("""
    El juego consiste en diferentes cuartos donde hay objetos, tal que cada objeto tiene un mini-juego a completar.
Cada vez que ganas uno de estos juegos, obtienes una recompensa que te puede servir para resolver la problem√°tica principal.
   Para llevar a cabo las diferentes acciones (interactuar con objetos, ver las vidas restantes, ir a otros cuartos...)
                tendr√°s que ingresar por teclado la opci√≥n que desees a partir de un men√∫ de opciones.
                """)
    print("-"*120)
    input("Presiona 'enter' para seguir.\n‚ñ∂Ô∏è ")
    while True:
        option = input("\nINSTRUCCIONES PARA CADA MINI-JUEGO: ingresa...\n\n\t1. Sopa de letras\n\t2. Preguntas sobre Python\n\t3. Adivinanzas\n\t4. Ahorcado\n\t5. Preguntas de matem√°ticas\n\t6. Criptograma\n\t7. Encuentra la l√≥gica\n\t8. Quizziz\n\t9. Memoria\n\t10. L√≥gica Booleana\n\t11. Blackjack\n\t12. Palabra Mezclada\n\t13. N√∫mero aleatorio (Escoge un n√∫mero entre)\n\tCualquier otro caracter: volver al men√∫ principal\n>")
        if option == '1':
            print("\nSOPA DE LETRAS: se te mostrar√° una sopa de letras en la cual deber√°s conseguir tres palabras. Cuando hayas conseguido una, \nintrod√∫cela por teclado. ¬°Cuidado con los errores ortogr√°ficos!\n")
        elif option == '2':
            print("\nPREGUNTAS SOBRE PYTHON: se te mostrar√° un problema que debes resolver escribiendo UNA SOLA l√≠nea de c√≥digo, usando Python. \n¬°Procura trabajar con la variable dada! Evita escribir comentarios en tu l√≠nea de c√≥digo.\n")
        elif option == '3':
            print("\nADIVINANZAS: se te mostrar√° una adivinanza y t√∫ deber√°s introducir por teclado la respuesta a la misma. \n¬°No te compliques y s√© preciso!\n")
        elif option == '4':
            print("\nAHORCADO: se te mostrar√° una peque√±a descripci√≥n acerca de una palabra y, a continuaci√≥n, espacios correspondientes \na cada letra de la misma, as√≠ como el dibujo de la horca. El juego funciona como cualquier otro\njuego del ahorcado: ingresa por teclado, una por una, las letras que crees que forman parte de la palabra. \nTienes s√≥lo 6 oportunidades para equivocarte, si no ¬°el ahorcado morir√°!\n")
        elif option == '5':
            print("\nPREGUNTAS DE MATEM√ÅTICAS: se te mostrar√° un peque√±o problema de derivadas que deber√°s resolver. \nTranquilo, puedes usar calculadora, esto no es un examen. \nSi el resultado no es entero, puedes usar n√∫meros decimales o fracciones (ejemplo: 0.5 o 1/2).\n")
        elif option == '6':
            print("\nCRIPTOGRAMA: se te mostrar√° la informaci√≥n necesaria para decodificar un mensaje y, luego, un mensaje en c√≥digo. \nIntroduce por teclado el mensaje decodificado una vez lo hayas conseguido.\n")
        elif option == '7':
            print("\nENCUENTRA LA L√ìGICA: se te mostrar√° un problema matem√°tico con s√≠mbolos, cuyos valores deber√°s descifrar a partir de \nla informaci√≥n dada. Luego, introduce por teclado la respuesta al problema.\n")
        elif option == '8':
            print("\nQUIZZIZ: tendr√°s que responder una pregunta de selecci√≥n simple acerca de la cultura unimetana. \n¬°Evita ingresar opciones inv√°lidas! Si lo haces, contar√° como una respuesta incorrecta.\n")
        elif option == '9':
            print("\nMEMORIA: funciona como cualquier juego de memoria, en el cual tienes cartas boca abajo y vas destap√°ndolas de par en par,\ncon el fin de conseguir todos los pares iguales. En este caso, las cartas son emojis y la forma en las que las destapas es \ningresando por teclado sus coordenadas en horizontal y vertical (es decir, el n√∫mero de su fila y luego de su columna).\n")
        elif option == '10':
            print("\nL√ìGICA BOOLEANA: se te mostrar√° un peque√±o problema de l√≥gica booleana en funci√≥n de ciertas variables cuyos valores \nson dados (True o False). Luego, deber√°s introducir por teclado el resultado final (True o False). \n¬°Cuidado con los errores ortogr√°ficos!\n")
        elif option == '11':
            print("\nBLACKJACK: funciona como cualquier otro juego de Blackjack: se te dan dos cartas y el Crupier (en este caso, la computadora) toma una.\nLuego, tienes la opci√≥n de tomar m√°s cartas o quedarte, con el fin de que la suma de los valores de tus cartas den tan cerca\ncomo sea posible de 21, SIN sobrepasarlo. Si lo sobrepasas, pierdes autom√°ticamente. Luego, el crupier tomar√° sus cartas:\nquien est√© m√°s cerca de 21 gana.\n")
        elif option == '12':
            print("\nPALABRA MEZCLADA: se te mostrar√°n una serie de palabras mezcladas, todas relacionadas con una categor√≠a dada, \nque deber√°s desmezclar. Una vez consigas una palabra, introd√∫cela por teclado. ¬°Cuidado con los errores ortogr√°ficos!\n")
        elif option == '13':
            print("\nN√öMERO ALEATORIO: se te pedir√° que ingreses un n√∫mero dentro de un rango de n√∫meros. Luego, podr√°s usar UNA pista \npara saber si tu n√∫mero estuvo muy o un poco por debajo o por arriba del n√∫mero real.\n")
        else:
            break
        input("Presiona 'enter' para seguir.\n‚ñ∂Ô∏è ")
   
def main():
    """Funci√≥n main para el inicio del juego: contiene el men√∫ principal de opciones.
    """
    players = {}
    players = player_functions.get_data_from_txt('registered_players.txt', players)

    print("\n", "BIENVENIDO A ‚ú®ESCAPAMET‚ú®".center(120, " "))
    print("¬°Uno de los √∫nicos juegos interactivos tipo escape-room ambientados en la Unimet!".center(120, " "))
    while True:
        print("\n","MEN√ö PRINCIPAL".center(120, '~'))
        print("\nINGRESA:\n\t1. Para comenzar una nueva partida üéÆ\n\t2. Para ver las instrucciones del juego ü§ì\n\t3. Para ver los records üìà\n\t4. Para salir üòû\n")
        user_input = input(">")
        if user_input == '1':
            new_game(players)
            player_functions.load_data_to_txt('registered_players.txt', players)
        elif user_input == '2':
            instructions()
        elif user_input == '3':
            statistics.game_statistics(players)
        elif user_input == '4':
            print("\nAdi√≥s üëã\n")
            break
        else:
            print("\nIngreso inv√°lido")

if __name__ == '__main__':
    main()